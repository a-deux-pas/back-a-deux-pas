# Identifying the application in various contexts such as logging and monitoring.
spring.application.name=back-a-deux-pas-prod

# Set the port number on which the server will listen
server.port=8081

# Connection url for the database
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:3306/${MYSQL_DATABASE}?createDatabaseIfNotExist=true
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}

# Enable importing configuration from AWS Secrets Manager in Spring
spring.config.import=optional:aws-secretsmanager:a-deux-pas-secrets
cloud.aws.credentials.instance-profile=true
cloud.aws.credentials.use-ec2-metadata=true
cloud.aws.region.static=eu-west-3
cloud.aws.region.auto=false

# Seed users passwords
first.pass = ${FIRST_PASS}
second.pass = ${SECOND_PASS}
third.pass = ${THIRD_PASS}
fourth.pass = ${FOURTH_PASS}
fifth.pass = ${FIFTH_PASS}
sixth.pass = ${SIXTH_PASS}
seventh.pass = ${SEVENTH_PASS}
eighth.pass = ${EIGHTH_PASS}

# JWT related variables
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION}
app.jwt.expiration.remember=${JWT_EXPIRATION_REMEMBER}

#enables multipart requests
spring.servlet.multipart.enabled=true

# Maximum allowed size of the entire request (including all files and form data)
spring.servlet.multipart.max-request-size=50MB

# Maximum allowed size of a single uploaded file
spring.servlet.multipart.max-file-size=40MB

# cloudinary credentials
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# Cloudinary url
cloudinary.url = ${CLOUDINARY_URL}

# Stripe
stripe.api.key=${STRIPE_API_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}
